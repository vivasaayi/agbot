name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    
    - name: Check formatting
      run: cargo fmt --all -- --check
      
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Run tests
      run: cargo test --all-features

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    
    - name: Build
      run: cargo build --release --all-features

  cross-compile:
    name: Cross Compile
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu  # ARM64 (Jetson)
          - armv7-unknown-linux-gnueabihf  # ARM (Raspberry Pi)
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    
    - name: Install cross
      run: cargo install cross
      
    - name: Cross compile
      run: cross build --target ${{ matrix.target }} --release

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: agrodrone:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
